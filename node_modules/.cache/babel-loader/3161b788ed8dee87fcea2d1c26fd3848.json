{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Documents/BIT/PROJECT/Blockchain Land System/black-dashboard-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\BIT\\\\PROJECT\\\\Blockchain Land System\\\\black-dashboard-react-master\\\\src\\\\components\\\\BackgroundColorWrapper\\\\BackgroundColorWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { BackgroundColorContext, backgroundColors } from \"contexts/BackgroundColorContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BackgroundColorWrapper(props) {\n  _s();\n\n  var _useState = useState(backgroundColors.blue),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return /*#__PURE__*/_jsxDEV(BackgroundColorContext.Provider, {\n    value: {\n      color: color,\n      changeColor: changeColor\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BackgroundColorWrapper, \"zCV1X5RcD7f9enJKYCAIO1ZgiRs=\");\n\n_c = BackgroundColorWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundColorWrapper\");","map":{"version":3,"names":["React","useState","BackgroundColorContext","backgroundColors","BackgroundColorWrapper","props","blue","color","setColor","changeColor","children"],"sources":["C:/Users/user/Documents/BIT/PROJECT/Blockchain Land System/black-dashboard-react-master/src/components/BackgroundColorWrapper/BackgroundColorWrapper.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BackgroundColorContext,\n  backgroundColors,\n} from \"contexts/BackgroundColorContext\";\n\nexport default function BackgroundColorWrapper(props) {\n  const [color, setColor] = useState(backgroundColors.blue);\n\n  function changeColor(color) {\n    setColor(color);\n  }\n\n  return (\n    <BackgroundColorContext.Provider\n      value={{ color: color, changeColor: changeColor }}\n    >\n      {props.children}\n    </BackgroundColorContext.Provider>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,sBADF,EAEEC,gBAFF,QAGO,iCAHP;;AAKA,eAAe,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;EAAA;;EACpD,gBAA0BJ,QAAQ,CAACE,gBAAgB,CAACG,IAAlB,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,SAASC,WAAT,CAAqBF,KAArB,EAA4B;IAC1BC,QAAQ,CAACD,KAAD,CAAR;EACD;;EAED,oBACE,QAAC,sBAAD,CAAwB,QAAxB;IACE,KAAK,EAAE;MAAEA,KAAK,EAAEA,KAAT;MAAgBE,WAAW,EAAEA;IAA7B,CADT;IAAA,UAGGJ,KAAK,CAACK;EAHT;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GAduBN,sB;;KAAAA,sB"},"metadata":{},"sourceType":"module"}