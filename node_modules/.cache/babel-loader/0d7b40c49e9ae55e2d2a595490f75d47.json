{"ast":null,"code":"import _slicedToArray from \"C:/Users/user/Documents/BIT/PROJECT/Blockchain Land System/black-dashboard-react-master DARK/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\BIT\\\\PROJECT\\\\Blockchain Land System\\\\black-dashboard-react-master DARK\\\\src\\\\components\\\\ThemeWrapper\\\\ThemeWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThemeContextWrapper(props) {\n  _s();\n\n  var _useState = useState(themes.dark),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(function () {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      changeTheme: changeTheme\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeContextWrapper, \"81LJbYGtqjdO775TVdpnETOnTlU=\");\n\n_c = ThemeContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeContextWrapper\");","map":{"version":3,"names":["React","useState","useEffect","ThemeContext","themes","ThemeContextWrapper","props","dark","theme","setTheme","changeTheme","light","document","body","classList","add","remove","children"],"sources":["C:/Users/user/Documents/BIT/PROJECT/Blockchain Land System/black-dashboard-react-master DARK/src/components/ThemeWrapper/ThemeWrapper.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ThemeContext, themes } from \"contexts/ThemeContext\";\n\nexport default function ThemeContextWrapper(props) {\n  const [theme, setTheme] = useState(themes.dark);\n\n  function changeTheme(theme) {\n    setTheme(theme);\n  }\n\n  useEffect(() => {\n    switch (theme) {\n      case themes.light:\n        document.body.classList.add(\"white-content\");\n        break;\n      case themes.dark:\n      default:\n        document.body.classList.remove(\"white-content\");\n        break;\n    }\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme: theme, changeTheme: changeTheme }}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n}\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,uBAArC;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;EAAA;;EACjD,gBAA0BL,QAAQ,CAACG,MAAM,CAACG,IAAR,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,SAASC,WAAT,CAAqBF,KAArB,EAA4B;IAC1BC,QAAQ,CAACD,KAAD,CAAR;EACD;;EAEDN,SAAS,CAAC,YAAM;IACd,QAAQM,KAAR;MACE,KAAKJ,MAAM,CAACO,KAAZ;QACEC,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;QACA;;MACF,KAAKX,MAAM,CAACG,IAAZ;MACA;QACEK,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,eAA/B;QACA;IAPJ;EASD,CAVQ,EAUN,CAACR,KAAD,CAVM,CAAT;EAYA,oBACE,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEA,KAAK,EAAEA,KAAT;MAAgBE,WAAW,EAAEA;IAA7B,CAA9B;IAAA,UACGJ,KAAK,CAACW;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAxBuBZ,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}